version: "3.5"

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-stockchat}
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -q -U postgres -d stockchat" ]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/db/migrations:/migrations
    entrypoint:
      [ "migrate", "-path", "/migrations", "-database",  "postgres://postgres:postgres@postgres:5432/stockchat?sslmode=disable"]
    command: ["up"]

  rabbitmq:
    image: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: "/"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"

  srv:
    build:
      context: ./server
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5000:5000"

  bot:
    build:
      context: ./bot
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  vue:
    build:
      context: ./client
    ports:
      - "3000:3000"
volumes:
  pgdata: